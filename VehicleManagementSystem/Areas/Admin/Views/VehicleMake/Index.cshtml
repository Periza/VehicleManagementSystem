@model VehicleManagementSystem.Service.PaginatedList<VehicleMakeViewModel>
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Vehicle Makes";
    string nameSort = ViewData["NameSortParam"] as string ?? "";
    string abrvSort = ViewData["AbrvSortParam"] as string ?? "";
    string? sortOrder = HttpContextAccessor.HttpContext?.Request.Query["sortOrder"];
    string? currentFilter = HttpContextAccessor.HttpContext?.Request.Query["searchString"];
    string? currentPageNumber = HttpContextAccessor.HttpContext?.Request.Query["pageNumber"];
}

<h1>@ViewData["Title"]</h1>


<form asp-action="Index" method="get" class="form-inline my-2 my-lg-0">
    <input type="hidden" name="sortOrder" value="@sortOrder" />
    <div class="form-actions no-color">
        <p>
            Search: <input type="text" name="SearchString" value="@currentFilter"/>
            <input type="submit" value="Search" class="btn btn-default"/> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<div class="mb-3">
    <a href="@Url.Action("Upsert", controller: "VehicleMake")" class="btn btn-success">Create</a>
</div>

<table class="table">
    <thead>
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@nameSort" asp-route-searchString="@currentFilter" asp-route-pageNumber="@currentPageNumber">
                Name
                @{
                    if (sortOrder is "name_desc")
                    {
                        <i class="bi bi-arrow-down"></i>
                    }
                    else if (sortOrder is "name_asc")
                    {
                        <i class="bi bi-arrow-up"></i>
                    }
                }
            </a>
        </th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@abrvSort" asp-route-searchString="@currentFilter" asp-route-pageNumber="@currentPageNumber">
                Abbreviation
                @{
                    if (sortOrder is "abrv_desc")
                    {
                        <i class="bi bi-arrow-down"></i>
                    }
                    else if (sortOrder is "abrv_asc")
                    {
                        <i class="bi bi-arrow-up"></i>
                    }
                }
            </a>
        </th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @if (Model.IsNullOrEmpty())
    {
        <tr>
            <td colspan="2" class="text-center">No vehicle makes available</td>
        </tr>
    }
    else
    {
        @foreach (VehicleMakeViewModel item in Model)
        {
            <tr>
                <td>@item.Name</td>
                <td>@item.Abrv</td>
                <td>
                    <a href="@Url.Action("Upsert", controller: "VehicleMake", values: new { id = item.Id })" class="btn btn-primary">Edit</a>
                    <a href="@Url.Action("Delete", controller: "VehicleMake", values: new { id = item.Id })" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    }

    </tbody>
</table>

@{
    string prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    string nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@sortOrder"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-searchString="@currentFilter)}"
   class="btn btn-default @prevDisabled"
>
    Previous
</a>

<a asp-action="Index"
   asp-route-sortOrder="@sortOrder"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-searchString="@currentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>